{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/utils/types.ts"],"names":[],"mappings":"","sourcesContent":["import { Balance, Index, RefCount } from \"@polkadot/types/interfaces\"\nimport { u32 } from \"@polkadot/types\"\nimport { Codec } from \"@polkadot/types/types\"\nimport { ApiPromise } from \"@polkadot/api\"\nimport { KeyringPair, KeyringPair$Json } from \"@polkadot/keyring/types\"\n\nexport interface Option {\n  network: string\n  client: string | undefined\n  provider: string\n}\n\nexport interface SimpleProvider {\n  name: string\n  id: string\n  client: string\n}\n\nexport interface Account {\n  address: string\n  name: string\n}\n\nexport interface AccountCtx {\n  userAddress: string\n  userPair?: KeyringPair\n  userName: string\n}\n\nexport interface LocalStorageAccountCtx extends AccountCtx {\n  userSeed: string\n  userJson: KeyringPair$Json\n  userHistory: EvtTxCtx\n}\n\nexport interface CreateAccountCtx {\n  account: LocalStorageAccountCtx\n  setCurrentAccount: (account: LocalStorageAccountCtx) => void\n}\n\nexport interface AdminCtx {\n  adminAddress: string\n  adminPair: KeyringPair\n  deriveAdmin: (userName: string) => string\n  treasuryAddress: string\n  userName: string\n}\n\nexport interface ApiCtx {\n  api: ApiPromise\n}\n\nexport interface BalanceVisibilityCtx {\n  balanceVisibility: boolean\n  setBalanceVisibility: (bal: boolean) => void\n}\n\nexport interface MgrEvent {\n  when: Date\n  method: string\n  amount: Balance\n  address: string\n  key: string\n  wasSent: boolean | null\n  from: string | null\n  to: string\n}\n\nexport type EvtMgrCtx = MgrEvent[]\n\nexport interface TxEvent {\n  withWhom: string\n  extrinsic: string\n  value: string | number\n  status: string | number\n}\n\nexport type EvtTxCtx = TxEvent[]\n\nexport interface AccountData extends Codec {\n  free: Balance\n  reserved: Balance\n  miscFrozen: Balance\n  feeFrozen: Balance\n  txCount: u32\n  sessionIndex: u32\n}\n\nexport interface AccountInfo extends Codec {\n  nonce: Index\n  refcount: RefCount\n  data: AccountData\n}\n\nexport interface UserInfo {\n  active: boolean\n  address: string\n  created: Date\n  balance: Balance\n  reserved: Balance\n  feeFrozen: Balance\n  miscFrozen: Balance\n}\n\nexport interface ExtrinsicInfo {\n  status: string | number\n}\n\nexport interface Data extends ExtrinsicInfo {\n  withWhom: string\n  value: string | number\n  extrinsic: string\n}\nexport interface SizeScale {\n  size?: \"large\" | \"medium\" | \"small\"\n}\n\nexport interface Column {\n  id: \"withWhom\" | \"extrinsic\" | \"value\" | \"status\"\n  label: string\n  minWidth?: number\n  maxWidth?: number\n  width?: number\n  align?: \"right\"\n}\n"]}