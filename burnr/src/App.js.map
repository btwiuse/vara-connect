{"version":3,"file":"App.js","sourceRoot":"","sources":["../../src/App.tsx"],"names":[],"mappings":"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","sourcesContent":["import { SetStateAction, useEffect, useState } from \"react\"\nimport { BrowserRouter } from \"react-router-dom\" // Pages\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { ApiContext, AccountContext } from \"./utils/contexts\"\nimport { LocalStorageAccountCtx } from \"./utils/types\"\nimport { useApiCreate, useLocalStorage } from \"./hooks\"\nimport { createLocalStorageAccount } from \"./utils/utils\"\nimport { NETWORK } from \"./utils/constants\"\nimport { ApiPromise } from \"@polkadot/api\"\n\nimport Home from \"./Home\"\n\nimport {\n  NavFooter,\n  ThemeToggleProvider,\n  Head,\n  ErrorBoundary,\n  BurnrBG,\n  BurnrDivider,\n} from \"./components\"\n\ninterface Props {\n  className?: string\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    minHeight: \"100vh\",\n  },\n  main: {\n    width: \"100%\",\n    maxWidth: `${theme.spacing(3) + 650}px`,\n    padding: theme.spacing(2),\n    flex: 1,\n  },\n}))\n\nconst App: React.FunctionComponent<Props> = ({ className = \"\" }: Props) => {\n  const api: ApiPromise = useApiCreate()\n  const classes = useStyles()\n  const [endpoint, setEndpoint] = useLocalStorage(\"endpoint\")\n  if (!endpoint) {\n    setEndpoint(NETWORK.id)\n  }\n  const [localStorageAccount, setLocalStorageAccount] = useLocalStorage(\n    endpoint?.toLowerCase(),\n  )\n\n  const [account, setCurrentAccount] = useState<LocalStorageAccountCtx>(\n    {} as LocalStorageAccountCtx,\n  )\n  const [loader, setLoader] = useState(true)\n\n  useEffect((): void => {\n    const callSetters = async () => {\n      if (await api.isReady) {\n        if (!localStorageAccount) {\n          const userTmp = createLocalStorageAccount()\n          setLocalStorageAccount(JSON.stringify(userTmp))\n          setCurrentAccount(userTmp)\n        } else {\n          setCurrentAccount(\n            JSON.parse(\n              localStorageAccount,\n            ) as SetStateAction<LocalStorageAccountCtx>,\n          )\n        }\n        setLoader(false)\n      }\n    }\n\n    api && callSetters()\n  }, [localStorageAccount, setLocalStorageAccount, api])\n\n  return (\n    <BrowserRouter>\n      <div className={`${classes.root} ${className}`}>\n        <ThemeToggleProvider>\n          <AccountContext.Provider value={{ account, setCurrentAccount }}>\n            <ErrorBoundary>\n              <main className={classes.main}>\n                <ApiContext.Provider value={api}>\n                  <Head />\n                  <BurnrDivider />\n                  <Home account={account} loader={loader} />\n                  <BurnrBG />\n                </ApiContext.Provider>\n              </main>\n              <NavFooter />\n            </ErrorBoundary>\n          </AccountContext.Provider>\n        </ThemeToggleProvider>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n"]}