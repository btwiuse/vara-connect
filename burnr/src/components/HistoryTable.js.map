{"version":3,"file":"HistoryTable.js","sourceRoot":"","sources":["../../../src/components/HistoryTable.tsx"],"names":[],"mappings":"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","sourcesContent":["import { FunctionComponent, useContext } from \"react\"\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Theme,\n  makeStyles,\n  alpha,\n} from \"@material-ui/core\"\n\nimport { AccountContext } from \"../utils/contexts\"\nimport { HistoryTableRow } from \".\"\nimport { Data, Column } from \"../utils/types\"\nimport { useBalance } from \"../hooks\"\n\nconst columns: Column[] = [\n  { id: \"withWhom\", label: \"\", width: 160 },\n  { id: \"extrinsic\", label: \"Extrinsic\" },\n  { id: \"value\", label: \"Value\", minWidth: 170, align: \"right\" },\n  { id: \"status\", label: \"Status\", width: 40, align: \"right\" },\n]\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  table: {\n    \"& th\": {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.disabled,\n    },\n    \"& td, & th\": {\n      padding: theme.spacing(0.5),\n      borderBottom: `1px solid ${alpha(theme.palette.divider, 0.5)}`,\n    },\n    \"& td:last-child, & th:last-child\": {\n      textAlign: \"center\",\n    },\n    \"& tr:hover\": {\n      backgroundColor: \"transparent !important\",\n      \"& button\": {\n        backgroundColor: \"rgba(0, 0, 0, 0.03)\",\n      },\n    },\n  },\n}))\n\nconst HistoryTable: FunctionComponent = () => {\n  const classes = useStyles()\n  const { account } = useContext(AccountContext)\n  const rows: Data[] = account.userHistory\n  const balanceArr = useBalance(account?.userAddress || \"\")\n  const unit = balanceArr[3]\n\n  return (\n    <Table size=\"small\" stickyHeader className={classes.table}>\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              key={column.id}\n              align={column.align}\n              style={{\n                width: column.width,\n                minWidth: column.minWidth,\n                maxWidth: column.maxWidth,\n              }}\n            >\n              {column.label}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map((row, i) => {\n          return (\n            <HistoryTableRow unit={unit} key={i} row={row} columns={columns} />\n          )\n        })}\n      </TableBody>\n    </Table>\n  )\n}\n\nexport default HistoryTable\n"]}