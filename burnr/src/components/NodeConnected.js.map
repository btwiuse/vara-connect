{"version":3,"file":"NodeConnected.js","sourceRoot":"","sources":["../../../src/components/NodeConnected.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useState, useEffect, ReactElement } from \"react\"\n\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\"\nimport { Typography, Box } from \"@material-ui/core\"\nimport { ApiPromise } from \"@polkadot/api\"\n\nimport { NETWORK, BURNR_WALLET } from \"../utils/constants\"\nimport { useApi } from \"../hooks\"\nimport { logger } from \"@polkadot/util\"\n\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    nodeSelectorWrap: {\n      position: \"relative\",\n      height: \"60px\",\n      borderTopRightRadius: theme.spacing(0.5),\n      borderTopLeftRadius: theme.spacing(0.5),\n      backgroundColor: theme.palette.background.paper,\n    },\n    nodeSelectorInner: {\n      position: \"absolute\",\n      zIndex: theme.zIndex.modal,\n      width: \"100%\",\n      borderRadius: theme.spacing(0.5),\n      backgroundColor: theme.palette.background.paper,\n      \"&.open\": {\n        boxShadow: theme.shadows[2],\n      },\n    },\n    nodeDesc: {\n      paddingLeft: theme.spacing(1),\n    },\n  }),\n)\n\nexport interface Option {\n  network: string\n  client: string | undefined\n  provider: string\n}\n\ntype colorType =\n  | \"inherit\"\n  | \"primary\"\n  | \"secondary\"\n  | \"action\"\n  | \"disabled\"\n  | \"error\"\n\nexport default function NodeConnected(): ReactElement {\n  const l = logger(BURNR_WALLET)\n  const classes = useStyles()\n  const api = useApi()\n  const [fiberColor, setFiberColor] = useState<colorType>(\"error\")\n\n  useEffect(() => {\n    const getColor = async (api: ApiPromise) => {\n      if (api && (await api.isReady)) {\n        setFiberColor(\"primary\")\n        l.log(\"Burnr wallet is now connected to\", NETWORK.name)\n      }\n    }\n\n    api && getColor(api)\n  }, [api, l])\n\n  return (\n    <div className={classes.nodeSelectorWrap}>\n      <div className={classes.nodeSelectorInner}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          pt={2.5}\n          pb={2.5}\n          pl={2.5}\n          pr={2.5}\n        >\n          <FiberManualRecordIcon\n            style={{ fontSize: \"16px\", marginRight: 4 }}\n            color={fiberColor}\n          />\n          <Box width=\"100%\" display=\"flex\" alignItems=\"baseline\">\n            <Typography variant=\"h4\">{NETWORK.name}</Typography>\n            <Typography\n              variant=\"body2\"\n              className={classes.nodeDesc}\n              color=\"textSecondary\"\n            >\n              {NETWORK.client}\n            </Typography>\n          </Box>\n        </Box>\n      </div>\n    </div>\n  )\n}\n"]}