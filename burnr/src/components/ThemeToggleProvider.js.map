{"version":3,"file":"ThemeToggleProvider.js","sourceRoot":"","sources":["../../../src/components/ThemeToggleProvider.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AAChC,OAAO,EACL,aAAa,EACb,WAAW,EACX,WAAW,EACX,UAAU,GACX,MAAM,mBAAmB,CAAA;AAC1B,OAAO,EAAE,cAAc,EAAE,aAAa,EAAE,MAAM,aAAa,CAAA;AAC3D,OAAO,EAAE,eAAe,EAAE,MAAM,UAAU,CAAA;AAE1C,OAAO,EAAE,aAAa,EAAE,WAAW,EAAE,MAAM,eAAe,CAAA;AAE1D,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACvC,IAAI,EAAE;QACJ,QAAQ,EAAE,OAAO;QACjB,OAAO,EAAE,MAAM;QACf,UAAU,EAAE,QAAQ;QACpB,cAAc,EAAE,eAAe;QAC/B,KAAK,EAAE,OAAO;QACd,QAAQ,EAAE,QAAQ;QAClB,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QACzB,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAE9B,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;YAC9B,UAAU,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;SAC7B;KACF;CACF,CAAC,CAAC,CAAA;AAEH,MAAM,mBAAmB,GAAG,CAAC,EAAE,QAAQ,EAAiC,EAAE,EAAE;IAC1E,MAAM,OAAO,GAAG,SAAS,EAAE,CAAA;IAC3B,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,eAAe,CAAC,OAAO,CAAC,CAAA;IAC5D,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,UAAU,KAAK,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;IACzE,MAAM,YAAY,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,aAAa,CAAC,CAAA;IAExE,MAAM,WAAW,GAAG,CAAC,QAAiB,EAAE,EAAE;QACxC,aAAa,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAA;QAClC,QAAQ,CAAC,QAAQ,CAAC,CAAA;IACpB,CAAC,CAAA;IAED,OAAO,CACL,MAAC,aAAa,IAAC,KAAK,EAAE,YAAY,aAChC,KAAC,WAAW,KAAG,EACf,eAAK,SAAS,EAAE,OAAO,CAAC,IAAI,aAC1B,KAAC,aAAa,IAAC,KAAK,EAAE,KAAK,GAAI,EAC/B,KAAC,WAAW,IAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,GAAI,IAC7D,EACL,QAAQ,IACK,CACjB,CAAA;AACH,CAAC,CAAA;AAED,eAAe,mBAAmB,CAAA","sourcesContent":["import { useState } from \"react\"\nimport {\n  ThemeProvider,\n  createTheme,\n  CssBaseline,\n  makeStyles,\n} from \"@material-ui/core\"\nimport { SubstrateLight, SubstrateDark } from \"./../themes\"\nimport { useLocalStorage } from \"../hooks\"\n\nimport { LogoSubstrate, ThemeButton } from \"../components\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"100vw\",\n    maxWidth: \"1330px\",\n    padding: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingTop: theme.spacing(1),\n    },\n  },\n}))\n\nconst ThemeToggleProvider = ({ children }: { children: React.ReactNode }) => {\n  const classes = useStyles()\n  const [localTheme, setLocalTheme] = useLocalStorage(\"theme\")\n  const [theme, setTheme] = useState(localTheme === \"false\" ? false : true)\n  const appliedTheme = createTheme(theme ? SubstrateLight : SubstrateDark)\n\n  const selectTheme = (selected: boolean) => {\n    setLocalTheme(selected.toString())\n    setTheme(selected)\n  }\n\n  return (\n    <ThemeProvider theme={appliedTheme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <LogoSubstrate theme={theme} />\n        <ThemeButton theme={theme} onClick={() => selectTheme(!theme)} />\n      </div>\n      {children}\n    </ThemeProvider>\n  )\n}\n\nexport default ThemeToggleProvider\n"]}