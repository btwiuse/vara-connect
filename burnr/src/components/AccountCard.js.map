{"version":3,"file":"AccountCard.js","sourceRoot":"","sources":["../../../src/components/AccountCard.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAqB,QAAQ,EAAE,MAAM,OAAO,CAAA;AACnD,OAAO,SAAS,MAAM,2BAA2B,CAAA;AACjD,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAA;AAC7D,OAAO,QAAwB,MAAM,wBAAwB,CAAA;AAE7D,OAAO,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAA;AAOhD,MAAM,KAAK,GAAG,CAAC,KAAiB,EAAE,EAAE;IAClC,OAAO,KAAC,QAAQ,kBAAC,SAAS,EAAE,CAAC,EAAE,OAAO,EAAC,QAAQ,IAAK,KAAK,EAAI,CAAA;AAC/D,CAAC,CAAA;AAED,MAAM,WAAW,GAA6B,CAAC,EAC7C,OAAO,EACP,aAAa,GACP,EAAE,EAAE;IACV,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAU,KAAK,CAAC,CAAA;IAC5D,OAAO,CACL,8BACE,KAAC,QAAQ,kBACP,YAAY,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,EACvD,IAAI,EAAE,UAAU,EAChB,gBAAgB,EAAE,IAAI,EACtB,OAAO,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,gBAEnC,KAAC,KAAK,kBAAC,QAAQ,EAAC,SAAS,6BAAgB,IAChC,EAEX,MAAC,GAAG,kBAAC,OAAO,EAAC,MAAM,EAAC,UAAU,EAAC,QAAQ,iBACrC,KAAC,SAAS,IACR,IAAI,EAAE,EAAE,EACR,KAAK,EAAC,UAAU,EAChB,KAAK,EAAE,OAAO,CAAC,OAAO,EACtB,MAAM,EAAE,GAAG,EAAE;4BACX,aAAa,CAAC,IAAI,CAAC,CAAA;4BACnB,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;wBAClC,CAAC,GACD,EACF,MAAC,GAAG,kBACF,MAAM,EAAE,EAAE,EACV,OAAO,EAAC,MAAM,EACd,aAAa,EAAC,QAAQ,EACtB,cAAc,EAAC,QAAQ,EACvB,EAAE,EAAE,CAAC,iBAEJ,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,CACtB,KAAC,UAAU,kBAAC,OAAO,EAAC,IAAI,gBAAE,OAAO,CAAC,IAAI,IAAc,CACrD,EACD,KAAC,UAAU,kBAAC,OAAO,EAAC,WAAW,gBAC5B,aAAa,KAAK,MAAM;oCACvB,CAAC,CAAC,OAAO,CAAC,OAAO;oCACjB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;wCAC3B,KAAK;wCACL,OAAO,CAAC,OAAO,CAAC,KAAK,CACnB,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAC1B,OAAO,CAAC,OAAO,CAAC,MAAM,CACvB,IACM,KACT,KACF,IACL,CACJ,CAAA;AACH,CAAC,CAAA;AAED,eAAe,WAAW,CAAA","sourcesContent":["import { FunctionComponent, useState } from \"react\"\nimport Identicon from \"@polkadot/react-identicon\"\nimport { Typography, Snackbar, Box } from \"@material-ui/core\"\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\"\nimport { Account } from \"../utils/types\"\nimport { copyToClipboard } from \"../utils/utils\"\n\ninterface Props {\n  account: Account\n  addressFormat?: \"Full\" | \"Short\"\n}\n\nconst Alert = (props: AlertProps) => {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n}\n\nconst AccountCard: FunctionComponent<Props> = ({\n  account,\n  addressFormat,\n}: Props) => {\n  const [showCopied, setShowCopied] = useState<boolean>(false)\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={showCopied}\n        autoHideDuration={2000}\n        onClose={() => setShowCopied(false)}\n      >\n        <Alert severity=\"success\">Copied!</Alert>\n      </Snackbar>\n\n      <Box display=\"flex\" alignItems=\"center\">\n        <Identicon\n          size={32}\n          theme=\"polkadot\"\n          value={account.address}\n          onCopy={() => {\n            setShowCopied(true)\n            copyToClipboard(account.address)\n          }}\n        />\n        <Box\n          height={32}\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          ml={1}\n        >\n          {account.name !== \"\" && (\n            <Typography variant=\"h4\">{account.name}</Typography>\n          )}\n          <Typography variant=\"subtitle2\">\n            {addressFormat === \"Full\"\n              ? account.address\n              : account.address.slice(0, 4) +\n                \"...\" +\n                account.address.slice(\n                  account.address.length - 4,\n                  account.address.length,\n                )}\n          </Typography>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport default AccountCard\n"]}