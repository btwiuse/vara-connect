{"version":3,"file":"AccountBurn.js","sourceRoot":"","sources":["../../../src/components/AccountBurn.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAqB,UAAU,EAAE,MAAM,OAAO,CAAA;AAErD,OAAO,EACL,IAAI,EACJ,MAAM,EACN,UAAU,EAEV,YAAY,GACb,MAAM,mBAAmB,CAAA;AAC1B,OAAO,YAAY,MAAM,6BAA6B,CAAA;AAEtD,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAA;AAElD,OAAO,EAAE,yBAAyB,EAAE,MAAM,gBAAgB,CAAA;AAC1D,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,MAAM,UAAU,CAAA;AAE9D,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,KAAY,EAAE,EAAE,CAC5C,YAAY,CAAC;IACX,SAAS,EAAE;QACT,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI;QACzC,KAAK,EAAE,OAAO;QACd,SAAS,EAAE,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;QAC5B,SAAS,EAAE;YACT,eAAe,EAAE,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK;SAC3C;KACF;CACF,CAAC,CACH,CAAA;AAED,MAAM,WAAW,GAAsB,GAAG,EAAE;;IAC1C,MAAM,OAAO,GAAG,SAAS,EAAE,CAAA;IAE3B,MAAM,GAAG,GAAG,MAAM,EAAE,CAAA;IACpB,MAAM,WAAW,GAAG,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAA;IAE5C,MAAM,CAAC,QAAQ,CAAC,GAAG,eAAe,CAAC,UAAU,CAAC,CAAA;IAC9C,MAAM,WAAW,GAAG,MAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,0CAAE,WAAW,EAAE,CAAA;IAC1D,MAAM,CAAC,EAAE,aAAa,CAAC,GAAG,eAAe,CAAC,WAAW,CAAC,CAAA;IAEtD,MAAM,EAAE,OAAO,EAAE,iBAAiB,EAAE,GAAG,UAAU,CAAC,cAAc,CAAC,CAAA;IAEjE,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAA;IAE/C,MAAM,aAAa,GAAG,GAAS,EAAE;QAC/B,IACE,CAAC,OAAO,CAAC,CAAC,CAAC;YACX,CAAC,MAAM,CAAC,OAAO,CACb,+BAA+B,OAAO,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CACrE,EACD;YACA,OAAM;SACP;QACD,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAA;QACpC,MAAM,OAAO,GAAG,yBAAyB,EAAE,CAAA;QAC3C,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAA;QACtC,iBAAiB,CAAC,OAAO,CAAC,CAAA;IAC5B,CAAC,CAAA;IAED,OAAO,CACL,KAAC,IAAI,kBAAC,SAAS,QAAC,OAAO,EAAC,QAAQ,EAAC,UAAU,EAAC,QAAQ,gBAClD,KAAC,IAAI,kBAAC,IAAI,sBACR,KAAC,MAAM,kBACL,OAAO,EAAC,WAAW,EACnB,IAAI,EAAC,OAAO,EACZ,SAAS,EAAE,OAAO,CAAC,SAAS,EAC5B,SAAS,EAAE,KAAC,YAAY,KAAG,EAC3B,OAAO,EAAE,GAAG,EAAE,CAAC,aAAa,EAAE,0BAGvB,IACJ,IACF,CACR,CAAA;AACH,CAAC,CAAA;AAED,eAAe,WAAW,CAAA","sourcesContent":["import { FunctionComponent, useContext } from \"react\"\n\nimport {\n  Grid,\n  Button,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core\"\nimport WhatshotIcon from \"@material-ui/icons/Whatshot\"\n\nimport { AccountContext } from \"../utils/contexts\"\n\nimport { createLocalStorageAccount } from \"../utils/utils\"\nimport { useApi, useBalance, useLocalStorage } from \"../hooks\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    redButton: {\n      backgroundColor: theme.palette.error.main,\n      color: \"white\",\n      marginTop: theme.spacing(12),\n      \"&:hover\": {\n        backgroundColor: theme.palette.error.light,\n      },\n    },\n  }),\n)\n\nconst AccountBurn: FunctionComponent = () => {\n  const classes = useStyles()\n\n  const api = useApi()\n  const chainTokens = api.registry.chainTokens\n\n  const [endpoint] = useLocalStorage(\"endpoint\")\n  const minEndpoint = endpoint?.split(\"-\")[0]?.toLowerCase()\n  const [, setLclStorage] = useLocalStorage(minEndpoint)\n\n  const { account, setCurrentAccount } = useContext(AccountContext)\n\n  const balance = useBalance(account.userAddress)\n\n  const burnAndCreate = (): void => {\n    if (\n      !balance[2] &&\n      !window.confirm(\n        `Burn keys from account with ${balance[0]} ${chainTokens.join(\"\")}?`,\n      )\n    ) {\n      return\n    }\n    localStorage.removeItem(minEndpoint)\n    const userTmp = createLocalStorageAccount()\n    setLclStorage(JSON.stringify(userTmp))\n    setCurrentAccount(userTmp)\n  }\n\n  return (\n    <Grid container justify=\"center\" alignItems=\"center\">\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          className={classes.redButton}\n          startIcon={<WhatshotIcon />}\n          onClick={() => burnAndCreate()}\n        >\n          Burn\n        </Button>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default AccountBurn\n"]}