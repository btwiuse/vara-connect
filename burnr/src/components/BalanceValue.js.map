{"version":3,"file":"BalanceValue.js","sourceRoot":"","sources":["../../../src/components/BalanceValue.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAqB,IAAI,EAAE,MAAM,OAAO,CAAA;AAE/C,OAAO,EAAE,UAAU,EAAS,MAAM,0BAA0B,CAAA;AAC5D,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,mBAAmB,CAAA;AAEnD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAe9C,iCAAiC;AACjC,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,KAAY,EAAE,EAAE,CAAC,CAAC;IAC9C,IAAI,EAAE;QACJ,OAAO,EAAE,aAAa;QACtB,UAAU,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;QAC9B,aAAa,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;QACjC,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAC7B,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9B,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC;QAChC,eAAe,EAAE,CAAC,KAAiB,EAAE,EAAE,CACrC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;QAClD,KAAK,EAAE,CAAC,KAAiB,EAAE,EAAE,CAC3B,KAAK,CAAC,OAAO;YACX,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC;YAC5D,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO;KACjC;IACD,IAAI,EAAE;QACJ,MAAM,EAAE,CAAC,KAAiB,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC;KACvE;CACF,CAAC,CAAC,CAAA;AAEH,MAAM,YAAY,GAA6B,CAAC,EAC9C,KAAK,EACL,SAAS,EACT,IAAI,GAAG,EAAE,EACT,IAAI,EACJ,KAAK,GACC,EAAE,EAAE;IACV,MAAM,QAAQ,GAAG,aAAa,CAAC,KAAK,CAAC,CAAA;IACrC,MAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;IACzC,MAAM,OAAO,GAAG,SAAS,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAA;IAErE,MAAM,iBAAiB,GAAG,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAA;IAEtE,OAAO,CACL,KAAC,GAAG,kBAAC,SAAS,EAAC,MAAM,EAAC,SAAS,EAAE,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,gBACzD,KAAC,UAAU,kBAAC,OAAO,EAAE,iBAAiB,EAAE,SAAS,EAAE,OAAO,CAAC,IAAI,gBAC5D,GAAG,QAAQ,IAAI,IAAI,EAAE,IACX,IACT,CACP,CAAA;AACH,CAAC,CAAA;AAED,eAAe,IAAI,CAAC,YAAY,CAAC,CAAA","sourcesContent":["import { FunctionComponent, memo } from \"react\"\n\nimport { makeStyles, Theme } from \"@material-ui/core/styles\"\nimport { Box, Typography } from \"@material-ui/core\"\nimport { SizeScale } from \"../utils/types\"\nimport { prettyBalance } from \"../utils/utils\"\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\"\nimport { Balance } from \"@polkadot/types/interfaces\"\n\ninterface Props extends SizeScale {\n  value: Balance\n  isVisible: boolean\n  unit?: string\n  style?: CSSProperties\n}\ninterface StyleProps {\n  colored?: boolean\n  visible?: boolean\n}\n\n// @TODO get token codes from api\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    display: \"inline-flex\",\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    borderRadius: theme.spacing(0.5),\n    backgroundColor: (props: StyleProps) =>\n      props.colored ? theme.palette.primary.light : \"\",\n    color: (props: StyleProps) =>\n      props.colored\n        ? theme.palette.getContrastText(theme.palette.primary.light)\n        : theme.palette.text.primary,\n  },\n  blur: {\n    filter: (props: StyleProps) => (props.visible ? \"unset\" : \"blur(5px)\"),\n  },\n}))\n\nconst BalanceValue: FunctionComponent<Props> = ({\n  value,\n  isVisible,\n  unit = \"\",\n  size,\n  style,\n}: Props) => {\n  const fBalance = prettyBalance(value)\n  const isColored = parseInt(fBalance) >= 0\n  const classes = useStyles({ colored: isColored, visible: isVisible })\n\n  const TypographyVariant = size === \"large\" ? \"subtitle1\" : \"subtitle2\"\n\n  return (\n    <Box component=\"span\" className={classes.root} style={style}>\n      <Typography variant={TypographyVariant} className={classes.blur}>\n        {`${fBalance} ${unit}`}\n      </Typography>\n    </Box>\n  )\n}\n\nexport default memo(BalanceValue)\n"]}