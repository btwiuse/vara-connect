{"version":3,"file":"InputFunds.js","sourceRoot":"","sources":["../../../src/components/InputFunds.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  FunctionComponent,\n  useState,\n  ChangeEvent,\n  MouseEvent,\n  SetStateAction,\n  Dispatch,\n} from \"react\"\nimport { Button, Grid, TextField, Box, InputAdornment } from \"@material-ui/core\"\nimport { useApi } from \"../hooks\"\nimport BN from \"bn.js\"\n\ninterface Props {\n  total: BN\n  currency: string\n  hidePercentages?: boolean\n  setAmount: Dispatch<SetStateAction<string>>\n}\n\nconst InputFunds: FunctionComponent<Props> = ({\n  total,\n  setAmount,\n  currency,\n  hidePercentages = false,\n}: Props) => {\n  const api = useApi()\n  const [showValue, setShowValue] = useState<string>(\"\")\n\n  const handleChange = (e: ChangeEvent | MouseEvent, fromButtons = false) => {\n    if ((e.currentTarget as HTMLButtonElement).value?.length > 6) return\n    if (fromButtons) {\n      const calcNewTotal =\n        parseFloat((e.currentTarget as HTMLButtonElement).value) *\n        parseInt(new BN(total).toString())\n      const truncDec = Math.trunc(calcNewTotal)\n      setShowValue(\n        calcNewTotal.toString() !== \"\"\n          ? (truncDec / Math.pow(10, api.registry.chainDecimals[0])).toFixed(4)\n          : \"\",\n      )\n      setAmount(truncDec.toString())\n      document.getElementById(\"SendFundsAmountField\")?.focus()\n    } else {\n      const value = (e.currentTarget as HTMLButtonElement).value\n      const v: number =\n        parseFloat(value) * Math.pow(10, api.registry.chainDecimals[0])\n      setShowValue(value !== \"\" ? value : \"\")\n      setAmount(value !== \"\" ? v.toString() : \"0\")\n    }\n  }\n\n  // @TODO focus/blur TextField and %Buttons at the same time in a React way\n  const [focus, setFocus] = useState<boolean>(false)\n  const handleFocus = () => {\n    setFocus(!focus)\n  }\n\n  return (\n    <>\n      <Box marginBottom={1}>\n        <TextField\n          id=\"SendFundsAmountField\"\n          value={showValue}\n          label=\"Amount\"\n          fullWidth\n          type=\"number\"\n          placeholder=\"0\"\n          variant=\"outlined\"\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleFocus}\n          InputProps={{\n            fullWidth: true,\n            startAdornment: (\n              <InputAdornment position=\"start\">{currency}</InputAdornment>\n            ),\n          }}\n        />\n      </Box>\n\n      {!hidePercentages && (\n        <Grid container spacing={1}>\n          {[\n            { label: \"25%\", value: 0.25 },\n            { label: \"50%\", value: 0.5 },\n            { label: \"75%\", value: 0.75 },\n            { label: \"100%\", value: 1 },\n          ].map((item, index) => {\n            return (\n              <Grid key={index} item>\n                <Button\n                  onClick={(e) => handleChange(e, true)}\n                  variant=\"outlined\"\n                  color={focus ? \"primary\" : \"default\"}\n                  size=\"small\"\n                  value={item.value}\n                >\n                  {item.label}\n                </Button>\n              </Grid>\n            )\n          })}\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default InputFunds\n"]}