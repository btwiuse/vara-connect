{"version":3,"file":"useLocalStorage.js","sourceRoot":"","sources":["../../../../src/hooks/api/useLocalStorage.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,QAAQ,EAA4B,MAAM,OAAO,CAAA;AAErE,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,eAAuB,EACqB,EAAE;IAC9C,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAC1C,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,EAAE,CAC5C,CAAA;IAED,SAAS,CAAC,GAAS,EAAE;QACnB,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,UAAU,CAAC,CAAA;IACnD,CAAC,EAAE,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC,CAAA;IAEjC,OAAO,CAAC,UAAU,EAAE,aAAa,CAAC,CAAA;AACpC,CAAC,CAAA","sourcesContent":["import { useEffect, useState, Dispatch, SetStateAction } from \"react\"\n\nexport const useLocalStorage = (\n  localStorageKey: string,\n): [string, Dispatch<SetStateAction<string>>] => {\n  const [localValue, setLocalValue] = useState<string>(\n    localStorage.getItem(localStorageKey) || \"\",\n  )\n\n  useEffect((): void => {\n    localStorage.setItem(localStorageKey, localValue)\n  }, [localValue, localStorageKey])\n\n  return [localValue, setLocalValue]\n}\n"]}